@model IEnumerable<VocalSpace.Models.ViewModel.Song.SongViewModel>
@{
	int count = 1;
	var userid = ViewData["uid"] ?? null;
	ViewData["Title"] = Model.FirstOrDefault()!.PlayListName+"播放清單";
}
<style>
	.book {
		margin-right: 10px;
		border: 1px solid gray;
		border-radius: 50%;
		width: 50px;
		height: 50px;
		font-size: 25px;
	}

		.book:hover {
			margin-right: 10px;
			background-color: rgb(255, 87, 87);
		}

		.book.selected {
			margin-right: 10px;			
			border: 1px solid rgb(255, 87, 87);
			color: rgb(255, 87, 87);
		}

	.btn-play-playlist {
		border: 1px solid gray;
		border-radius: 50%;
		width: 50px;
		height: 50px;
		font-size:25px;
	}

	.editlist {
		margin-right: 10px;	
		border: 1px solid gray;
		border-radius: 50%;
		width: 50px;
		height: 50px;
		font-size: 25px;
	}

	.modal-title{
		color:black;
	}

</style>
<div class="page-container mb-5">
	<div class="top-container container">
		<!-- 左側圖片區域 -->
		<div class="col-md-4 songpfp">
			<img src="@Model.FirstOrDefault()!.PlayListCoverImagePath">
		</div>
		<!-- 右側音樂介紹區域 -->
		<div class="row col-md-8 songinfo">
			<h1>@Model.FirstOrDefault()!.PlayListName</h1>
			<div class="opacity-50">
				<div>
					<a>@Model.FirstOrDefault()!.PlayListSongCount 首歌</a>
				</div>
			</div>
			<div class="cols-2">
				<div class="row-item">
					<ul class="list-inline opacity-75">
						<li class="list-inline-item">
							<h4 class="fs-6">喜歡</h4>
							<h4>@Model.FirstOrDefault()!.LikeCount</h4>
						</li>
					</ul>
					<div class="ui-button">
						@await Component.InvokeAsync("PlayListButton", new { PlayListId = @Model.FirstOrDefault()!.PlayListId })

						@* <button class="btn btn-outline-secondary book"> *@
						@* 	<i class="bi bi-bookmark-check-fill"></i> *@
						@* </button> *@
						@* <button class="btn btn-outline-secondary random"><i class="bi bi-shuffle"></i></button> *@

					</div>
				</div>
			</div>
		</div>
	</div>

	@await Html.PartialAsync("_Modal_DeletePlayList")
	<!-- 放在圖片下方的歌手資訊 -->
	<div class="bottom-container container">
		<div class="left-container  col-4">
			<!-- AJAX動態載入-UserBar -->
			<!--用個假趴秀先封裝AJAX用的div-->
			@await Html.PartialAsync("_UserbarContainer_partial", Model.FirstOrDefault()!.UserId)
			<div class="container">
				<hr class="mt-5 mb-2">
				<p class="text-gray-light mb-2 opacity-50">
					發布日期:@(Model.FirstOrDefault()!.PlayListCreateTime.ToString("yyyy/MM/dd"))
				</p>
				<hr class="mt-2 mb-5">
			</div>
			@* 廣告圖 *@
			<div class="ad_container container">
				<img src="/image/SportMatchad.jpg">
			</div>
		</div>
		<div class="right-container col-8">

			@if (Model == null)
			{
				<h2 class="no-data">暫無資料</h2>
			}
			else
			{
				<div id="realtime" class="ranking-list">
					<div class="Randomplay">
						<h3>曲目</h3>						
					</div>
					@{
						foreach (var playlist in Model)
						{
							foreach (var item in playlist.Songs)
							{
								<div class="ranking-item">
									<span class="rank">@count</span>
									<a href="/Song/@item.SongId">
										<img class="SongCover" src="@item.SongCoverPhotoPath" alt="song cover">
									</a>
									<div class="info">
										<a href="/Song/@item.SongId">
											<p class="song">@item.SongName</p>
										</a>
										<a href="/Personal/mymusic/@item.ArtistId">
											<p class="artist">@item.SongArtist</p>
										</a>
									</div>
									<div class="button">
										@await Component.InvokeAsync("SongButton", new { songId = item.SongId })
										@if (playlist.UserId == (long?)userid)
										{
											<button class="btn btn-outline-secondary deleteSong" data-bs-toggle="modal" data-bs-target="#deleteSongModal" data-playlist-id="@playlist.PlayListId" data-song-id="@item.SongId"><i class="bi bi-trash"></i></button>
										}
									</div>
								</div>
								count++;
							}
						}
					}
				</div>
			}
		</div>
	</div>
</div>

<!-- 刪除曲目彈窗 -->
<div class="modal fade" id="deleteSongModal" tabindex="-1" aria-labelledby="deleteSongModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title" id="deleteSongModalLabel">刪除曲目</h2>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				你確定要刪除這個曲目？
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" data-bs-dismiss="modal">取消</button>
				<button type="button" class="btn btn-secondary confirmDeleteSong" data-bs-dismiss="modal">確定</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script src="/js/PlayList.js"></script>
	<script>
		//AJAX 取得UserBar
		$(function () {
			let userId = $("#userBarContainer").data("userid");
			$.ajax({
				url: `/Personal/GetUserBar/${userId}`, // Controller 端點，
				type: "GET",
				success: function (partialView) {
					$("#userBarContainer").html(partialView);
				},
				error: function (xhr) {
					$("#userBarContainer").html(`<p class='error-message'>上傳者載入失敗，錯誤訊息${xhr.responseText}</p>`);
				}
			});

			let songIdToDelete = null;
			let playlistIdToDelete = null;
			// 當點擊刪除按鈕時，取得對應的 SongId 和 PlayListId
			$(".deleteSong").on("click", function () {
				songIdToDelete = $(this).data("song-id");
				playlistIdToDelete = $(this).data("playlist-id");
				console.log(songIdToDelete, playlistIdToDelete);
			});

			// 當點擊「確定」按鈕時發送刪除請求
			$(document).on("click", ".confirmDeleteSong", function () {
				if (songIdToDelete && playlistIdToDelete) {
					$.ajax({
						url: `/Collection/DeleteSong/${playlistIdToDelete}/${songIdToDelete}`,
						type: "POST",
						success: function (response) {
							$('#deleteSongModal').on('hidden.bs.modal', function () {
								alert("刪除成功");
								location.reload();
							});
						},
						error: function () {
							alert("刪除失敗，請稍後再試！");
						}
					});
				}
			});
		});
	</script>
}