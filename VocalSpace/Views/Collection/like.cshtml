@model IEnumerable<VocalSpace.Models.ViewModel.Song.SongViewModel>
@{
	int count = 1;
}
<link rel="stylesheet" href="~/css/song.css" asp-append-version="true">
<title>蒐藏庫</title>
<div class="container">
	<h1>蒐藏庫</h1>
	<hr />
	<div class="content">
		<aside class="sidebar">
			<ul id="myList">
				<a asp-action="like">
					<li class="selected">我的喜歡<i class="bi bi-bookmark-heart"></i></li></a>
				<a asp-action="mylist">
					<li>我的歌單</li></a>
				<a asp-action="playrecord">
					<li>播放紀錄</li></a>
				<a asp-action="booking">
					<li>我訂閱的歌單</li></a>
			</ul>
		</aside>

		<main class="ranking">
			<div class="h2-row"><h2>蒐藏庫  /</h2><h2 class="red">我的喜歡</h2></div>


			<br />
			@if (Model == null)
			{
				<h2 class="no-data">暫無資料</h2>
			}
			else
			{
				<div id="realtime" class="ranking-list">
					<div class="Randomplay">
						<h3>歌曲</h3>
						<button class="btn btn-danger" onclick="RandomPlay()">
							<i class="bi bi-shuffle"></i>隨機播放
						</button>
					</div>
					@{
						foreach (var item in Model)
						{
							<div class="ranking-item">
								<span class="rank">@count</span>
								<a href="/Song/@item.SongId">
									<img src="@item.SongCoverPhotoPath" alt="song cover">
								</a>
								<div class="info">
									<a href="/Song/@item.SongId">
										<p class="song">@item.SongName</p>
									</a>
									<a asp-action ="/Personal/mymusic/" asp-action-id=""> <p class="artist">@item.UserName</p></a>
									@Html.PartialAsync("_SongButtonModal")
								</div>
							</div>
							count ++;
						}
					}
				</div>
			}
		</main>
	</div>
</div>



<script>

							function playSong(songId)
			{
				alert('播放歌曲 ID: ' + songId);
			}

			function playAll()
			{
				alert('播放全部歌曲');
			}

			const list = document.getElementById('myList');
			const items = list.getElementsByTagName('li');

							// 為每個 list 項目加上 click 事件監聽器
							for (let i = 0; i<items.length; i++) {
							items[i].addEventListener('click', function() {
				// 清除所有項目的選取效果
				for (let j = 0; j < items.length; j++)
				{
					items[j].classList.remove('selected');
				}
				// 為被點擊的項目加上選取效果
				this.classList.add('selected');
			});
							}

							// 取得所有按鈕
							const buttons = document.querySelectorAll('.btn-outline-secondary.heart');

							// 為每個按鈕加上點擊事件
							buttons.forEach(button => {
							button.addEventListener('click', function()
		{
			// 切換選取效果：如果已選取就取消選取，反之則加入選取效果
			this.classList.toggle('selected');
		});
							});


	// 分享歌曲按鈕之彈跳視窗
	function shareshowPopup()
	{
		document.getElementById('shareoverlay').style.display = 'flex';
	}
	function shareclosePopup()
	{
		document.getElementById('shareoverlay').style.display = 'none';
	}
	function sharecopyLink()
	{
		const input = document.querySelector('.sharepopup-footer input');
		input.select();
		document.execCommand('copy');
		alert('連結已複製');
	}


	// 加入歌單按鈕之彈跳視窗
	function addopenPopup()
	{
		document.getElementById("addoverlay").style.display = "block";
		document.getElementById("addpopup").style.display = "block";
		// 加入淡入效果
		setTimeout(() =>
		{
			document.getElementById("addoverlay").style.opacity = "1";
			document.getElementById("addpopup").style.opacity = "1";
			document.getElementById("addpopup").style.top = "30%";
		}, 10);
	}

	function addclosePopup()
	{
		// 淡出效果
		document.getElementById("addoverlay").style.opacity = "0";
		document.getElementById("addpopup").style.opacity = "0";
		document.getElementById("addpopup").style.top = "20%";

		// 延遲隱藏（等待動畫完成）
		setTimeout(() =>
		{
			document.getElementById("addoverlay").style.display = "none";
			document.getElementById("addpopup").style.display = "none";
		}, 300);
	}

	function addtoggleSelection(button)
	{
		if (button.classList.contains("selected"))
		{
			button.classList.remove("selected");
			button.textContent = "+ 加入歌單";
		}
		else
		{
			button.classList.add("selected");
			button.textContent = "✔ 已選擇";
		}
	}
</script>
