@model IEnumerable<VocalSpace.Models.ViewModel.Song.SongViewModel>

@{
    var userid = ViewData["uid"] ?? null;
}


<div class="container">
    <h1>蒐藏庫</h1>
    <hr />
    <div class="content">
        <aside class="sidebar">
            <ul id="myList">                    
                <a asp-action ="like" asp-route-id="@ViewBag.LoginId"><li>我的喜歡<i class="bi bi-bookmark-heart"></i></li></a>
                <a asp-action="mylist" asp-route-id="@ViewBag.LoginId"><li>我的歌單</li></a>
                <a asp-action="playrecord" asp-route-id="@ViewBag.LoginId"><li>播放紀錄</li></a>
                <a asp-action="booking" asp-route-id="@ViewBag.LoginId"><li  class="selected">我訂閱的歌單</li></a>
            </ul>
        </aside>           

        <main class="ranking">
            <div class="h2-row"><h2>蒐藏庫  /</h2><h2 class="red">我訂閱的歌單</h2></div>


            <br />
            @if (Model == null)
            {
                <h2 class="no-data">暫無資料</h2>
            }
            else
            {

                <div id="realtime" class="ranking-list">

                    <h2>歌單</h2>
                    @foreach (var item in Model)
                    {
                        <div class="ranking-item">

                            <a asp-action="listdetail" asp-route-id="@item.PlayListId">
                                <img src="@item.PlayListCoverImagePath" alt="song cover">
                            </a>
                            <div class="info">
                                <a asp-action="listdetail" asp-route-id="@item.PlayListId"><p class="song">@item.PlayListName</p></a>
                                <p class="artist">@item.PlayListSongCount 首歌曲．<a href="/Personal/mymusic/@item.UserId">@item.UserName</a></p>
                            </div>
                            <div class="btnarea d-flex justify-content-between">
                                @if (item.UserId == (long?)userid) { 
                                <button class="btn btn-outline-secondary deletelist" data-bs-toggle="modal" data-bs-target="#deleteplaylist" data-user-id="@userid" data-playlist-id="@item.PlayListId"><i class="bi bi-trash"></i></button>
                                <a asp-action="editlist" asp-route-id="@item.PlayListId" class="btn btn-outline-secondary editlist" onclick="editlist()"><i class="bi bi-pencil-square"></i></a>
                                }
                                <button class="btn btn-outline-secondary book"><i class="bi bi-bookmark-check-fill"></i></button>
                                <button class="btn btn-outline-secondary random"><i class="bi bi-shuffle"></i></button>
                            </div>
                        </div>

                    }
                </div>

            }

        </main>
        </div>
    </div>
@await Html.PartialAsync("_Modal_DeletePlayList")

    @section Scripts{
    <script src="/js/PlayList.js"></script>
<script>

const list = document.getElementById('myList');
    const items = list.getElementsByTagName('li');

    // 為每個 list 項目加上 click 事件監聽器
    for (let i = 0; i < items.length; i++) {
      items[i].addEventListener('click', function() {
        // 清除所有項目的選取效果
        for (let j = 0; j < items.length; j++) {
          items[j].classList.remove('selected');
        }
        // 為被點擊的項目加上選取效果
        this.classList.add('selected');
      });
    }
 // 取得所有按鈕
 const buttons = document.querySelectorAll('.btn-outline-secondary.book');

    // 為每個按鈕加上點擊事件
    buttons.forEach(button => {
      button.addEventListener('click', function() {
        // 切換選取效果：如果已選取就取消選取，反之則加入選取效果
        this.classList.toggle('selected');
      });
    });



</script>

        }