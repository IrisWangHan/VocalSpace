@model IEnumerable<VocalSpace.Models.ViewModel.Personal.PersonalViewModel>

@{
    Layout = "_PersonalLayout";  
    var mylist = ViewData["mylist"] as List<VocalSpace.Models.ViewModel.Song.SongViewModel>;
    var userid = ViewData["uid"];

}
<link rel="stylesheet" href="~/css/song.css" asp-append-version="true" />

<nav class="menu" id="myList">
    <a href="/Personal/mymusic/@Model.FirstOrDefault()!.UserId">音樂</a>
    @if (Model.FirstOrDefault()!.CurrentUserId == Model.FirstOrDefault()!.UserId) { 

        <a href="/Personal/mylist/@Model.FirstOrDefault()!.UserId" class="active">歌單</a>
        <a href="/Personal/mylike/@Model.FirstOrDefault()!.UserId">喜歡</a>
    }
    <a href="/Personal/myabout/@Model.FirstOrDefault()!.UserId">關於</a>
</nav>
@if (mylist != null)
{
    <div class="playlist">
        <div class="playlist-card">

            <h2>歌單</h2>
            @foreach (var item in mylist)
            {
                <div class="ranking-item">
                    <a asp-controller="Collection" asp-action="listdetail" asp-route-id="@item.PlayListId">
                        <img src="@item.PlayListCoverImagePath" alt="song cover">
                </a>

                <div class="listinfo">
                        <a asp-controller="Collection" asp-action="listdetail" asp-route-id="@item.PlayListId"><p class="song">@item.PlayListName</p></a>
                        <p class="artist">@item.PlayListSongCount 首歌曲．<a href="/Personal/mymusic/@item.UserId">@item.UserName</a></p>
                </div>
                <div class="btnarea">
                        <button class="btn btn-outline-secondary deletelist" data-bs-toggle="modal" data-bs-target="#deleteplaylist" data-user-id="@userid" data-playlist-id="@item.PlayListId"><i class="bi bi-trash"></i></button>
                        <a class="btn btn-outline-secondary editlist" href="/Collection/editlist/@item.PlayListId" onclick="editlist()"><i class="bi bi-pencil-square"></i></a>
                        <div class="btn-display">
                        @await Component.InvokeAsync("PlayListButton", new { PlayListId = item.PlayListId })
						</div>
                        @* <button class="btn btn-outline-secondary book"><i class="bi bi-bookmark-check-fill"></i></button> *@
                        @* <button class="btn btn-outline-secondary random"><i class="bi bi-shuffle"></i></button> *@
                </div>
            </div>

            }
        </div>
    </div>
}
else
{
    <h2 class="no-data">尚未建立歌單</h2>
}
@await Html.PartialAsync("_Modal_DeletePlayList")
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="/js/PlayList.js"></script>


